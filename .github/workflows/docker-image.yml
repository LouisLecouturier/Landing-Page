name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          # Utilisez un tag fixe, par exemple "latest"
          docker build . --file Dockerfile --tag mauria-landing-page:latest

      - name: Stop and remove previous container
        run: |
          # Récupérer le nom du conteneur en cours d'exécution basé sur l'image spécifiée
          CONTAINER_NAME=$(docker ps --format '{{.Names}}' --filter "name=mauria-landing-page")
          
          # Stopper et supprimer le conteneur s'il est en cours d'exécution
          if [ -n "$CONTAINER_NAME" ]; then
            echo "Arrêt et suppression du conteneur en cours d'exécution avec le nom : $CONTAINER_NAME"
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
          else
            echo "Aucun conteneur en cours d'exécution avec l'ancêtre spécifié."
          fi

      - name: Run the Docker image
        run: docker run -d -n mauria-landing-page -p 4321:3000 mauria-landing-page:latest

  notify-success:
    runs-on: self-hosted

    needs: build  # dépend du job 'build'

    steps:
      - name: Notify success
        run: echo "L'app a été mise à jour avec succès !"
